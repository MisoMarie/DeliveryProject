<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deliverymate.mapper.UserMapper">
    <insert id="insertUser" parameterType="com.deliverymate.domain.UserDTO">
        INSERT INTO user (id, password, phone, email, name, image, nickname)
        VALUES (#{id}, #{password}, #{phone}, #{email}, #{name}, #{image.image}, #{nickname})
    </insert>

    <select id="checkUserIdExists" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE id = #{id}
    </select>

    <select id="select_user_by_userInfo" resultType="com.deliverymate.domain.UserDTO">
        SELECT * FROM `user`
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
        </where>
    </select>
    <!--***************************패스워드관련*******************************-->
    <select id="select_user_token_with_expiredate">
        SELECT NOT ISNULL(`id`) FROM `user` WHERE
            `pw_reset_token` = #{token} AND `pw_reset_token_expire_date` >= now();
    </select>


    <update id="update_user_pw_token">
        UPDATE `user` SET
                          `pw_reset_token` = #{token},
                          `pw_reset_token_expire_date` = #{expireDate}
        WHERE `id` = #{id}
    </update>

    <update id="update_user_password">
        UPDATE `user` SET
                          `pw_reset_token` = NULL,
                          `pw_reset_token_expire_date` = NULL,
                          `password` = #{password}
        WHERE `pw_reset_token` = #{token}
    </update>
    <!--*************************장바구니***************************-->
    <select id="selectCartsByUserId" resultType="CartDTO">
        SELECT
            CART.no,
            ST.category,
            F.food_id,
            F.food_name,
            F.food_image
        FROM `cart` CART
            INNER JOIN `food` F
            ON F.food_store_no = CART.no
            INNER JOIN `store` ST
            ON ST.store_no = F.food_store_no
        WHERE CART.user_id = #{userId}

    </select>


    <!--**********************************************************-->
    <select id="select_wishlist_of_user">
        SELECT
            Store.*,
            Store.no AS 'store_no',
        FROM `wishlist` WISH
                 INNER JOIN `store` STORE
                            ON STORE.`store_no` = WISH.`store_no`
        WHERE WISH.`user_id` = #{id}
    </select>

    <insert id="insert_wishlist">
        INSERT IGNORE INTO `wishlist` VALUES
        (#{storeNo}, #{userId})
    </insert>

    <delete id="delete_wishlist">
        DELETE FROM `wishlist` WHERE
            `user_id` = #{userId} AND `store_no` = #{storeNo}
    </delete>

</mapper>